def pluginVersion = '1.3.2'

group 'org.nrg.xnat.biomedia'
version pluginVersion

def vXnat = '1.7.1-SNAPSHOT'
def vJunit = '4.12'
def vSpring = '4.2.7.RELEASE'
def vSlf4j = '1.7.21'
def vLog4j = '1.2.17'
def vSpringSecurity = '4.0.4.RELEASE'
def vSwagger = '2.4.0'

apply plugin: 'groovy'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'maven-publish'
apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'xnat-data-builder'

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven {
            url 'https://nrgxnat.jfrog.io/nrgxnat/libs-release'
            name 'XNAT Release Repository'
        }
        maven {
            url 'https://nrgxnat.jfrog.io/nrgxnat/libs-snapshot'
            name 'XNAT Snapshot Repository'
        }
    }
    dependencies {
        classpath "org.nrg.xnat.build:xnat-data-builder:1.7.1-SNAPSHOT"
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
    maven {
        url 'https://nrgxnat.jfrog.io/nrgxnat/libs-release'
        name 'XNAT Release Repository'
    }
    maven {
        url 'https://nrgxnat.jfrog.io/nrgxnat/libs-snapshot'
        name 'XNAT Snapshot Repository'
    }
    maven {
        url 'https://nrgxnat.jfrog.io/nrgxnat/ext-release'
        name 'XNAT External Release Repository'
    }
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

if (hasProperty("rt.17.jar")) {
    // Solution for bootstrap classpath warning and possible issues with compatibility with 1.7 libraries
    // was taken from this post on discuss.gradle.org: http://bit.ly/24xD9j0
    def rt17jar = getProperty("rt.17.jar")
    logger.info "Using ${rt17jar} as the bootstrap class path jar."
    gradle.projectsEvaluated {
        tasks.withType(org.gradle.api.tasks.compile.JavaCompile) {
            options.fork = true
            options.compilerArgs << "-XDignore.symbol.file"
            options.bootClasspath = rt17jar
        }
    }
} else {
    logger.warn "No value was set for the rt.17.jar build property, using the default bootstrap class path. You should consider setting rt.17.jar to indicate a jar file containing the Java 1.7 run-time library:\n"
    logger.warn "  ./gradlew -Prt.17.jar=rt-1.7.0_45.jar war\n"
}

compileJava {
    options.fork = false
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
            srcDir 'build/xnat-generated/src/main/java'
        }
        resources {
            srcDir 'src/main/resources'
            srcDir 'build/xnat-generated/src/main/resources'
        }
    }
}
configurations {
    all*.exclude group: 'avalon-framework'
    all*.exclude group: 'avalon-logkit'
    all*.exclude group: 'com.metaparadigm'
    all*.exclude group: 'excalibur-component'
    all*.exclude group: 'excalibur-instrument'
    all*.exclude group: 'excalibur-logger'
    all*.exclude group: 'excalibur-pool'
    all*.exclude group: 'fop'
    all*.exclude group: 'geronimo-spec'
    all*.exclude group: 'hsqldb'
    all*.exclude group: 'imagej'
    all*.exclude group: 'jamon'
    all*.exclude group: 'jakarta-regexp'
    all*.exclude group: 'org.apache.geronimo.specs'
    all*.exclude group: 'servletapi'
    all*.exclude group: 'quartz'
    all*.exclude group: 'ant', module: 'ant'
    all*.exclude group: 'edu.ucar', module: 'netcdf'
    all*.exclude group: 'javax.jms', module: 'jms'
    all*.exclude group: 'javax.mail', module: 'mail'
    all*.exclude group: 'javax.servlet', module: 'servlet-api'
    all*.exclude group: 'javax.sql', module: 'jdbc-stdext'
    all*.exclude group: 'javax.transaction', module: 'jta'
    all*.exclude group: 'jdbc', module: 'jdbc'
    all*.exclude group: 'jms', module: 'jms'
    all*.exclude group: 'jython', module: 'jython'
    all*.exclude group: 'net.sf.saxon', module: 'saxon'
    all*.exclude group: 'net.sf.saxon', module: 'saxon-dom'
    all*.exclude group: 'net.sf.saxon', module: 'saxon-xpath'
    all*.exclude group: 'net.sf.saxon', module: 'Saxon-B'
    all*.exclude group: 'stax', module: 'stax-api'
    all*.exclude group: 'xml-apis', module: 'xml-apis'
    all*.exclude module: 'log4j-slf4j-impl'
    all*.exclude module: 'pipelineCNDAXNAT'
    all*.exclude module: 'slf4j-simple'
    all*.exclude module: 'commons-betwixt'
    all*.exclude module: 'commons-messenger'
}


dependencies {
    compile("org.nrg.xnat:web:${vXnat}") {
        exclude group: '*'
    }
    compile("org.nrg.xnat:xnat-data-models:${vXnat}") {
        exclude group: '*'
    }
    compile("org.nrg.xdat:core:${vXnat}") {
        exclude group: '*'
    }

    compile("stratum:stratum:1.0-b5") {
        exclude group: '*'
    }

    compile "org.nrg:prefs:${vXnat}"
    compile "org.nrg:framework:${vXnat}"

    compile "org.reflections:reflections:0.9.10"
    compile "javax.servlet:javax.servlet-api:3.1.0"

    compile(group: 'turbine', name: 'turbine', version: '2.3.3') {
        exclude group: '*'
    }
    compile(group: 'org.apache.velocity', name: 'velocity', version: '1.7') {
        exclude group: '*'
    }

    compile "org.slf4j:slf4j-api:${vSlf4j}"
    compile "org.slf4j:slf4j-log4j12:${vSlf4j}"
    compile "org.slf4j:jul-to-slf4j:${vSlf4j}"
    compile "log4j:log4j:${vLog4j}"

    compile "org.springframework:spring-aop:${vSpring}"
    compile "org.springframework:spring-beans:${vSpring}"
    compile "org.springframework:spring-context-support:${vSpring}"
    compile "org.springframework:spring-context:${vSpring}"
    compile "org.springframework:spring-core:${vSpring}"
    compile "org.springframework:spring-jdbc:${vSpring}"
    compile "org.springframework:spring-jms:${vSpring}"
    compile "org.springframework:spring-messaging:${vSpring}"
    compile "org.springframework:spring-orm:${vSpring}"
    compile "org.springframework:spring-oxm:${vSpring}"
    compile "org.springframework:spring-tx:${vSpring}"
    compile "org.springframework:spring-web:${vSpring}"
    compile "org.springframework:spring-webmvc:${vSpring}"

    compile "io.springfox:springfox-swagger2:${vSwagger}"
    compile "io.springfox:springfox-swagger-ui:${vSwagger}"

    compile "org.springframework.security:spring-security-acl:${vSpringSecurity}"
    compile "org.springframework.security:spring-security-aspects:${vSpringSecurity}"
    compile "org.springframework.security:spring-security-config:${vSpringSecurity}"
    compile "org.springframework.security:spring-security-ldap:${vSpringSecurity}"
    compile "org.springframework.security:spring-security-taglibs:${vSpringSecurity}"
    compile "org.springframework.ldap:spring-ldap-core:2.0.4.RELEASE"

    compile "ecs:ecs:1.4.2"

    testCompile "junit:junit:${vJunit}"
    testCompile "org.springframework:spring-test:${vSpring}"
}

task deployToPluginsFolder(type: org.gradle.api.tasks.Copy, dependsOn: jar) {
    from jar.archivePath
    into "/data/xnat/home/plugins"
}

publishing.publications {
    mavenJava(org.gradle.api.publish.maven.MavenPublication) {
        from components.java

        pom.withXml {
            def root = asNode()
            root.appendNode('name', 'XNAT Workshop 2016 Plugin')
            root.appendNode('url', 'https://github.com/XnatWorkshop/xnat-biomedia-plugin')
            root.appendNode('inceptionYear', '2016')

            def scm = root.appendNode('scm')
            scm.appendNode('url', 'https://github.com/XnatWorkshop/xnat-biomedia-plugin')
            scm.appendNode('connection', 'scm:https://github.com/XnatWorkshop/xnat-biomedia-plugin.git')
            scm.appendNode('developerConnection', 'scm:git://github.com/XnatWorkshop/xnat-biomedia-plugin.git')

            def license = root.appendNode('licenses').appendNode('license')
            license.appendNode('name', 'Simplified BSD 2-Clause License')
            license.appendNode('url', 'http://xnat.org/about/license.php')
            license.appendNode('distribution', 'repo')

            def developers = root.appendNode('developers')

            def tolsen = developers.appendNode('developer')
            tolsen.appendNode('id', 'timolsen23')
            tolsen.appendNode('name', 'Tim Olsen')
            tolsen.appendNode('email', 'tim@deck5consulting.com')
        }
    }
}
